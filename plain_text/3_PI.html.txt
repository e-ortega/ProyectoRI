Esta pÃ¡gina podrÃ­a estar obsoleta. Guarda tu borrador antes de actualizar esta pÃ¡gina. EnvÃ­a cualquier cambio pendiente antes de actualizar esta pÃ¡gina.  Ocultar este mensaje . Quora Hacer un pregunta nueva Iniciar sesiÃ³n  C++ (lenguaje de programaciÃ³n)  ProgramaciÃ³n informÃ¡tica Â¿QuÃ© es un puntero inteligente? Actualizar Cancelar Wiki de respuesta 2 Respuestas   Ernesto BascÃ³n , http://oopscenities.net Contestado 23/10/2017 · El autor tiene 154 respuestas y 128,2k vistas de respuestas Es una variable de stack que se comporta como puntero debido a la sobrecarga del operador ->. La idea detrÃ¡s de los punteros inteligentes yace en que, al ser variables de stack, el compilador se encarga de llamar a su destructor cuando la variable sale de Ã¡mbito (esta caracterÃ­stica se denomina RAII). Gracias a eso y a que es posible sobrecargar el operador de asignaciÃ³n y crear constructores copia, el desarrollador del puntero inteligente puede implementar polÃ­ticas de manejo de memoria sobre el objeto del que estÃ¡ apuntando. Desde C++98 el programador puede crearse sus propios punteros inteligentes, pero desde C++11, la librerÃ­a estÃ¡ndar de C++ viene con 3 punteros inteligentes: unique_ptr , shared_ptr y weak_ptr ; que implementan diferentes polÃ­ticas de manejo automÃ¡tico de memoria. Gracias a estos tres tipos de punteros, es muy poco probable que el programador C++ necesite hacer manejo manual de memoria, como lo que se hace en C Ã³ en versiones de C++ anteriores al estÃ¡ndar del 2011. 643 visitas · Ver votantes positivos Preguntas relacionadas MÃ¡s respuestas a continuaciÃ³n Â¿QuÃ© es un iterador? Â¿CuÃ¡l es el significado de un puntero a un puntero? Â¿CuÃ¡l es su ventaja? Â¿QuÃ© es un puntero en la programaciÃ³n? Â¿QuÃ© es un compilador cruzado? Â¿QuÃ© es un intÃ©rprete? Hacer un pregunta nueva   Isaac Lascasas Actualizado 27/4/2018 En programaciÃ³n estructurada u orientada a objetos serÃ­a un mecanismo que encapsula el comportamiento de un puntero tradicional (un valor que indica una direcciÃ³n de memoria) y que lo dota de alguna caracterÃ­stica adicional. En los lenguajes modernos normalmente no se suelen usar punteros tradicionales y las asignaciones de objetos se entienden como copias de referencias. Posteriormente un recolector de basura gestiona cuando un objeto ya no es necesario y ha de eliminarse. Este proceso es un ejemplo de la nociÃ³n habitual de smart pointer. En C++ por ejemplo, en la librerÃ­a estÃ¡ndar existen objetos que encapsulan algo similar. Mediante conteo de referencias y aprovechando los destructores y el stack se puede saber cuantas referencias tenemos a un objeto y de tal forma eliminarlo cuando se deja de usar la ultima referencia. Aparte de la aplicaciÃ³n trivial la idea no esta limitada a la gestiÃ³n de memoria, aunque si tendrÃ­a siempre bastante que ver o estarÃ­amos hablando ya de otro concepto mucho mas abstracto. Un saludo. 153 visitas Ver mÃ¡s Preguntas relacionadas Â¿QuÃ© es deeplearn.js? Â¿QuÃ© es un sistema integrado? Â¿QuÃ© es un servidor web? Â¿QuÃ© es la programaciÃ³n? Â¿QuÃ© es la escabilidad? Â¿QuÃ© es un algoritmo? Â¿QuÃ© es la informÃ¡tica? Â¿QuÃ© es un ejemplo de una referencia fuerte en C++ y quÃ© tan diferente es un puntero sin formato? Â¿QuÃ© es la metaprogramaciÃ³n? Â¿QuÃ© es un formato UEFI? Â¿QuÃ© es ANSI-C++? Â¿CuÃ¡l es la diferencia entre la matriz de punteros y el puntero a una matriz? Â¿CuÃ¡l es la diferencia entre el puntero a char y el puntero a int en C? Â¿QuÃ© es embebido en informÃ¡tica? Â¿QuÃ© es la herencia prototÃ­pica? Hacer un pregunta nueva Â¿TodavÃ­a tienes alguna pregunta? Â¡Pregunta lo que necesites! Preguntar Preguntas relacionadas Â¿QuÃ© es un iterador? Â¿CuÃ¡l es el significado de un puntero a un puntero? Â¿CuÃ¡l es su ventaja? Â¿QuÃ© es un puntero en la programaciÃ³n? Â¿QuÃ© es un compilador cruzado? Â¿QuÃ© es un intÃ©rprete? Â¿QuÃ© es deeplearn.js? Â¿QuÃ© es un sistema integrado? Â¿QuÃ© es un servidor web? Â¿QuÃ© es la programaciÃ³n? Â¿QuÃ© es la escabilidad? Hacer un pregunta nueva En otros idiomas In English: What is a smart pointer? Sobre · Empleo · Privacidad · Condiciones · Contacto