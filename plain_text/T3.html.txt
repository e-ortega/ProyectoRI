                                          Please click here if you are not redirected within a few seconds.        Aceptar Las cookies nos permiten ofrecer nuestros servicios. Al utilizar nuestros servicios, aceptas el uso que hacemos de las cookies. MÃ¡s InformaciÃ³n .         Toggle navigation       Toggle navigation        Cursos   Backend  Frontend  Sistemas  Big Data  RobÃ³tica y Hardware  Desarrollo de aplicaciones moviles  Cloud Computing  MetodologÃ­as y Herramientas  Videojuegos  DevOps  Ciberseguridad y Ethical Hacking  Drupal  WordPress  GestiÃ³n de proyectos  Blockchain  Bases de datos   Ver todos    Carreras  Empresas  Contactar  Iniciar sesiÃ³n   Comenzar ahora           Los 5 frameworks de JavaScript para Frontend mÃ¡s usados en 2018  Frontend  Javascript              Blog     Miguh Ruiz   15 Junio 2018      2          Hay cientos de frameworks de JavaScript, y cada dÃ­a aparecen nuevos, en esta ocasiÃ³n vamos a ver los frameworks mÃ¡s usados el Ã¡rea de Frontend . Si el frontend no es lo tuyo, tenemos otro artÃ­culo donde repasamos los cinco frameworks para Backend relacionados con JavaScript mÃ¡s usados .  Esta clasificaciÃ³n estÃ¡ basada en The State of JavaScript , una encuesta anual sobre Javascript realizada a desarrolladores de todo el mundo. Puedes ver aquÃ­ los resultados que vamos a trabajar .   React  Seguro que ya lo esperabas antes de abrir el artÃ­culo, React es el gran favorito de los desarrolladores . Por si aÃºn no lo conoces, es una librerÃ­a de Facebook enfocada en la creaciÃ³n de vistas con particularidades como los patrones de eventos que permiten actualizar las mencionadas vistas cuando los datos hayan sido modificados, aportando una carga en tiempo real a nuestro desarrollo.  A pesar de no ser considerado un framework en los Ãºltimos aÃ±os ha acogido una gran popularidad, como podemos apreciar. QuizÃ¡s tambiÃ©n su versatilidad ha ayudado pues, al ser una librerÃ­a de vistas podrÃ­a ser perfectamente integrada con otro framework , como Angular.  Desde OpenWebinars te hemos machacado con React para que no le pierdas la pista, aquÃ­ te dejo alguno de los recursos relacionados:   ReactJS: IntroducciÃ³n y Primeros Pasos  Curso de ReactJS  Creando un CRUD con JavaScript: Construyendo el Frontend usando React   Sin framework  Aunque parezca algo increÃ­ble, y en nuestro caso una gran contraposiciÃ³n, ya que el artÃ­culo trata sobre una lista de frameworks, la realidad es que 9,5k de desarrolladores prefieren no usar ningÃºn framework y trabajar con cÃ³digo Vanilla , que es como se le conoce a escribir JavaScript puro.  Vanilla JS, o Javascript puro trae consigo numerosas ventajas como el tiempo de carga que te ahorras al no tener un framework que cargar o el poder estar en contacto con las APIs de Javascript de primera mano.  En menor proporciÃ³n estarÃ¡n incluidos en este apartado los equipos que hayan desarrollado su propio framework , aunque sin duda este espacio queda reservado para necesidades muy especÃ­ficas.  Angular 1.X  Aunque sin duda no es la Ãºltima versiÃ³n , el cambio que hubo tan grande en la API de Angular 2 ha hecho que algunos desarrolladores no se hayan puesto al dÃ­a de las Ãºltimas versiones de Angular, o simplemente que no hayan actualizado su cÃ³digo, por el esfuerzo titÃ¡nico necesario.  Este framework, y el resto de sus versiones fue creado inicialmente y es promovido por Google , entre sus caracterÃ­sticas encontramos que modifica el DOM directamente y alguna que otra caracterÃ­stica revolucionaria para su Ã©poca que hoy en dÃ­a nos sorprenden poco, habiendo visto el panorama que hay de frameworks y librerÃ­as.  Los sitios mÃ¡s destacados que estÃ¡n usado en este momento esta versiÃ³n de Angular son aplicaciones de Google y algÃºn que otro desarrollo que haya incorporado previamente esta tecnologÃ­a.  En lo relativo a aprendizaje, te recomiendo aprender la versiÃ³n mÃ¡s reciente de Angular , independientemente de la fecha en la que leas esto, ya que aunque esta versiÃ³n se use, veremos como se va hacer el cambio a nuevas versiones, que segÃºn asegurÃ³ Google, serÃ¡n retrocompatibles entre sÃ­.  VueJS  El otro gran favorito de los frameworks de Frontend, VueJS .  Vue fue creado por un ex-empleado de Google, que habÃ­a estado relacionado con AngularJS y que pretendÃ­a coger sus partes favoritas de este framework y crear algo muy ligero . Desde 2014 estÃ¡ disponible a toda la comunidad y, como no podrÃ­a ser de otra manera es un proyecto Open Source.  Su curva de aprendizaje es bastante reducida , y mÃ¡s lo es aÃºn si ya has trabajado con algÃºn otro framework como los que estamos mencionando aquÃ­. Por destacar en cuanto a sintaxis unifica en un solo archivo .vue todo el HTML, CSS y Javascript.  Su desarrollo permite que sea una buena opciÃ³n tanto para desarrollos sencillos en los que por ejemplo usarÃ­amos VanillaJS hasta SPA.  Con respecto a sus similitudes mÃ¡s latentes encontramos que el mÃ©todo del ciclo de vida de ReactJS y las directivas de Angular son bases de este framework.  Angular 2  Angular 2 fue una nueva versiÃ³n de Angular bastante convulsa en su lanzamiento pues, introducÃ­a una gran diferencia con respecto a su versiÃ³n anterior, lo que causÃ³ que los desarrolladores se enfurecieran al encontrarse una nueva API e incluso que todo el nuevo cÃ³digo estÃ¡ escrito en TypeScript , que no todo el mundo es experto en este compilador.  De igual manera, todas las novedades que introducÃ­a y el lavado de cara que llevaba a Angular a poder ser comparado con alternativas del momento como React hizo que los desarrolladores optaran por migrar a esta tecnologÃ­a. No debemos de olvidar tambiÃ©n que Google trabaja porque las siguientes versiones de Angular sea retrocompatibles y que este incidente no vuelva a suceder.  Aunque segÃºn lo que respondieron los encuestados, Angular 1 estÃ¡ mÃ¡s presente en los desarrollos, estoy completamente seguro que, para desarrollos completamente nuevos, si se elige Angular como tecnologÃ­a, se estÃ¡ trabajando con esta versiÃ³n o incluso con algunas versiones algo mejoradas, como es el caso de Angular 6 .  Angular 6 se sitÃºa a fecha de escribir este artÃ­culo como la Ãºltima versiÃ³n del framework y trae consigo una serie de actualizaciones enfocadas principalmente en las herramientas asociadas al framework, como el CLI, para dejar completamente a Angular listo para ser competitivo en el futuro y, sin duda lo ha estado siendo.  Conclusiones  Los frameworks de Frontend eran mÃ¡s previsibles que los que vimos con NodeJS, aunque, personalmente me ha sorprendido la cantidad de desarrolladores que optan por no usar ninguno de estos asÃ­ como la cantidad de desarrolladores que al haber iniciado un proyecto harÃ¡ algÃºn tiempo siguen estancados en Angular 1.  Desde OpenWebinars trabajamos para ofrecerte siempre los mejores contenidos los mÃ¡s actualizados posibles. En estos momentos acabamos de sacar un curso de Angular 6 y te recomiendo todos los cursos de la carrera de Frontend Developer Profesional para que no estÃ©s desconectado de este mundo.  Â¿QuÃ© framework te ha sorprendido que no estÃ© entre los mÃ¡s usados? Cuentanos en los comentarios que frameworks para frontend has probado o usas y dinos que tal te ha ido con Ã©l.     2 Comentarios - Ãšnete a la conversaciÃ³n    Inicia sesiÃ³n para comentar                            FormaciÃ³n   Precios  Cursos  Carreras  Empresas     Nosotros   Blog de tecnologÃ­a  Blog sobre gestiÃ³n de talento  Profesores     Ayuda   Contactar                 Mapa del Sitio  Aviso legal y condiciones  PolÃ­tica de privacidad  Cookies    Calle Virgen del Valle, 2A. 41011 Sevilla. +34 954 002 382 Copyright © 2018 Hipopoto S.L. Todos los derechos reservados                           