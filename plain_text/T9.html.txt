                     html            Conéctate o Regístrate        Conéctate o Regístrate              Toggle navigation         Inicio   Artículos    PROGRAMACIÓN GENERAL   C / C++ / C#  Java  Visual Basic  Objective-C  Python  Perl  Ruby  Delphi     PROGRAMACIÓN WEB   ASP  PHP  HTML  CSS  Javascript  Aplicaciones prefabricadas     BASES DE DATOS   SQL  Mongo DB  Oracle  MySQL  SQL Server     PROGRAMACIÓN APPs   Android  iOS  WindowsPhone  BlackBerry        Tutoriales (current)     PROGRAMACIÓN GENERAL   C / C++ / C#  Java  Visual Basic  Objective-C  Python  Perl  Ruby  Delphi     PROGRAMACIÓN WEB   ASP  PHP  HTML  CSS  Javascript  Aplicaciones prefabricadas     BASES DE DATOS   SQL  Mongo DB  Oracle  MySQL  SQL Server     PROGRAMACIÓN APPs   Android  iOS  WindowsPhone  BlackBerry       Noticias  Foros  Eventos  Empleo                        Inicio         Artículos         Lo que debes aprender en 2017: Backend y Frontend                 ×  Conéctate a Programacion.net       Conectarme a Programacion.net     ¿Olvidaste tu contraseña?               Lo que debes aprender en 2017: Backend y Frontend                  La industria del desarrollo de software continúa hacia delante con más fuerza que nunca. En 2016 hemos visto nuevos lenguajes de programación, frameworks y herramientas que cambian nuestra forma de trabajar haciéndonos más productivos y creativos. Es difícil hacer un seguimiento de todo lo que es nuevo, por lo que al final de cada año te damos nuestra opinión sobre lo que es importante aprender durante los próximos doce meses. Esta será una serie de artículos, así que estate atento los próximos días a programacion.net. Backend  Para el backend existen un montón de opciones, todo depende del lenguaje de programación o de las necesidades del rendimiento. Una tendencia a la alza es alejarse del backend, convirtiendo esa capa en una API consumida por el frontend y las aplicaciones móviles. Sin embargo, utilizar un framework es a menudo más simple y más rápido, y sigue siendo una opción válida para un montón de aplicaciones web.       Node.js es la principal manera de ejecutar JS fuera del navegador. Ha tenido varias actualizaciones este año, que aumentaron su rendimiento y ampliaron su soporte a ES6. Node cuenta con frameworks para la creación rápida de APIs, servidores, aplicaciones de escritorio e incluso bots, y una vasta comunidad que crea todo tipo de módulos imaginables. Puedes echarle un vistazo a estos frameworks: Express , Koa , Next , Nodal . PHP es un lenguaje web y cuenta con un gran número de frameworks donde elegir. Gracias a su excelente documentación y características, Laravel es una excelente opción, por ejemplo. Zend Framework lanzó la versión 3, que supuso una gran actualización para este marco orientado a los negocios. Symfony también vio un montón de nuevas actualizaciones este año, lo que la convierte también en una opción a tener muy en cuenta. Para Ruby , el framework Rails es definitivamente un must. La versión 5.0 fue lanzada este 2016, con soporte para Web Sockets, modo API y mucho más. Sinatra también es una muy buena opción para aplicaciones pequeñas, y su versión 2.0 se espera para algún momento de 2017. Si eres de Python , definitivamente debes echar un vistazo a Django y a Flask . Django 1.10 se lanzó en agosto introduciendo la búsqueda por texto completo en Postgres y muchas más características. El ecosistema de Java también cuenta con frameworks populares donde elegir. Play y Spark son dos opciones sólidas, y como bonus, decir que también pueden utilizarse con Scala. Para los entusiastas también está Phoenix , que está escrito en Elixir y trata de ser una característica completa alternativa a Rails con un rendimiento superior. Si Elixir es uno de los lenguajes que te gustaría aprender en 2017, prueba Phoenix. Frontend  La web introdujo dos avances mu importantes recientemente: el Web Assembly y los Service Workers, los cuales han abierto la puerta al desarrollo de aplicaciones web rápidas y eficiente. Los Service Workers, en particular, son la tecnología que lleva a cabo las aplicaciones web progresivas y cuentan con soporte para Notificaciones en la web, con más APIs a a las que seguir en el futuro. Angular.js 2 fue lanzado este año. El framework es respaldado por Google y muy popular entre pequeñas empresas y grandes empresas. Cuenta con un gran número de características que pueden implementar de todo, desde aplicaciones web, pasando por aplicaciones de escritorio e incluso, para móviles. El framework está escrito en TypeScript, un lenguaje altamente recomendado para desarrollar aplicaciones. Por eso creemos que aprender Angular 2 en 2017 será una buena inversión. Vue.js también vio su versión 2.0 este año. Coge lo mejor de Angular, React y Ember, y lo mete en un paquete fácil de usar. También es un poco más ligero y rápido que los dos primeros. Te sugiero que lo pruebes este año. Ember es otra opción sólida para un framework de JavaScript. Soporta data-bindings, plantillas auto-actualizables, componentes y renderizado del lado del servidor. Una gran ventaja sobre sus competidores, es que es mucho más estable. Los erroes y bugs son muy poco frecuentes y la comunidad valora la compatibilidad con versiones anteriores. Esto hace que el framework sea una buena opción para aquellas aplicaciones que vayan a contar con una vida larga. Otros dos frameworks que también valen la pena son Aurelia y React . El ecosistema en torno a React ha crecido de manera complicada este último año, por lo que es difícil recomendarlo a usuarios novatos. Pero los desarrolladores experimentados pueden combinar la librería con GraphQL , Relay , Flux e Immutable.js para obtener una gran solución. Ninguna compilación de frontend estaría completa sin mencionar Bootstrap . La versión 4 está actualmente en Alpha y se espera que se libere en 2017. Algunos de los cambios más reseñables son el nuevo componente card y la rejilla de flexbox, que modernizan el framework y hace que sea más sencillo trabajar con él. SASS y LESS siguen siendo los dos preprocesadores CSS más populares de hoy en día. Aunque vanilla CSS finalmente está recibiendo soporte para variables, SASS y LESS son aún muy superiores con soporte para mixins, funciones y organización de código. Fuente:  tutorialzine.com         COMPARTE ESTE ARTÍCULO   ENVIAR A UN AMIGO   COMPARTIR EN FACEBOOK   COMPARTIR EN TWITTER   COMPARTIR EN GOOGLE +    ARTÍCULO ANTERIOR  Cómo crear un fondo de vídeo a pantalla completa mediante CSS    SIGUIENTE ARTÍCULO  Cómo desbloquear contenido utilizando las redes sociales            ¡SÉ EL PRIMERO EN COMENTAR!  Conéctate o Regístrate para dejar tu comentario.        ×  Enviar a un amigo      Enviar a un amigo                               Publicar artículo      NUESTRAS REDES                          ¿TE HA GUSTADO? INDíCANOSLO                               Secciones   Artículos  Tutoriales y código fuente  Foros  Eventos  Empleo     Lenguajes Destacados   PHP  Java  ASP  Bases de datos  C     Información   Datos Legales  Política de privacidad  Publicidad     Contacto   Contacte con nosotros  Publicidad           Diseño web y desarrollo web . Un proyecto de los hermanos Carrero . Alojado en  cloud privado Stackscale  Más internet : Password | Favicon | Crear un Avatar     Copyright © 1998-2017 Programación en Castellano. Todos los derechos reservados                        