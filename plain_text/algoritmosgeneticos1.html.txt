       Algoritmo genÃ©tico   De Wikipedia, la enciclopedia libre   Saltar a navegaciÃ³n , bÃºsqueda   Un algoritmo es una serie de pasos organizados que describe el proceso que se debe seguir, para dar soluciÃ³n a un problema especÃ­fico.  En los aÃ±os 1970, de la mano de John Holland , surgiÃ³ una de las lÃ­neas mÃ¡s prometedoras de la inteligencia artificial , la de los algoritmos genÃ©ticos . Son llamados asÃ­ porque se inspiran en la evoluciÃ³n biolÃ³gica y su base genÃ©tico-molecular. Estos algoritmos hacen evolucionar una poblaciÃ³n de individuos sometiÃ©ndola a acciones aleatorias semejantes a las que actÃºan en la evoluciÃ³n biolÃ³gica ( mutaciones y recombinaciones genÃ©ticas ), asÃ­ como tambiÃ©n a una selecciÃ³n de acuerdo con algÃºn criterio, en funciÃ³n del cual se decide cuÃ¡les son los individuos mÃ¡s adaptados, que sobreviven, y cuÃ¡les los menos aptos, que son descartados.  Los algoritmos genÃ©ticos forman parte de una familia denominada algoritmos evolutivos , que incluye las estrategias de evoluciÃ³n , la programaciÃ³n evolutiva y la programaciÃ³n genÃ©tica . Dentro de esta Ãºltima se han logrado avances curiosos:  En 1999 , por primera vez en la historia, se concediÃ³ una patente a un invento no realizado directamente por un ser humano: se trata de una antena de forma extraÃ±a, pero que funciona perfectamente en las condiciones a las que estaba destinada. No hay, sin embargo, nada injusto en el hecho de que el autor del algoritmo genÃ©tico del que saliÃ³ la forma de la antena se haya atribuido la autorÃ­a de la patente, pues Ã©l escribiÃ³ el programa e ideÃ³ el criterio de selecciÃ³n que condujo al diseÃ±o patentado.  Un algoritmo genÃ©tico es un mÃ©todo de bÃºsqueda dirigida basada en probabilidad . Bajo una condiciÃ³n muy dÃ©bil (que el algoritmo mantenga elitismo, es decir, guarde siempre al mejor elemento de la poblaciÃ³n sin hacerle ningÃºn cambio) se puede demostrar que el algoritmo converge en probabilidad al Ã³ptimo. En otras palabras, al aumentar el nÃºmero de iteraciones, la probabilidad de tener el Ã³ptimo en la poblaciÃ³n tiende a 1 (uno).      Tabla de contenidos    1  Funcionamiento  2  CuÃ¡ndo usar estos algoritmos  3  Funcionamiento de un algoritmo genÃ©tico bÃ¡sico  4  Esquema general del algoritmo  5  VÃ©ase tambiÃ©n  6  Enlaces externos        [ editar ]  Funcionamiento  Los algoritmos genÃ©ticos establecen una analogÃ­a entre el conjunto de soluciones de un problema, llamado fenotipo, y el conjunto de individuos de una poblaciÃ³n natural, codificando la informaciÃ³n de cada soluciÃ³n en una cadena, generalmente binaria, llamada cromosoma. Los sÃ­mbolos que forman la cadena son llamados los genes. Cuando la representaciÃ³n de los cromosomas se hace con cadenas de dÃ­gitos binarios se le conoce como genotipo. Los cromosomas evolucionan a travÃ©s de iteraciones, llamadas generaciones. En cada generaciÃ³n, los cromosomas son evaluados usando alguna medida de aptitud. Las siguientes generaciones (nuevos cromosomas), llamada descendencia, se forman utilizando dos operadores, de cruzamiento y de mutaciÃ³n.   [ editar ]  CuÃ¡ndo usar estos algoritmos  Los algoritmos genÃ©ticos son de probada eficacia en caso de querer calcular funciones no derivables (o de derivaciÃ³n muy compleja) aunque su uso es posible con cualquier funciÃ³n. Deben tenerse en cuenta tambiÃ©n las siguientes consideraciones:   Si la funciÃ³n a optimizar tiene muchos mÃ¡ximos/mÃ­nimos locales se requerirÃ¡n mÃ¡s iteraciones del algoritmo para "asegurar" el mÃ¡ximo/mÃ­nimo global.  Si la funciÃ³n a optimizar contiene varios puntos muy cercanos en valor al Ã³ptimo, solamente podemos "asegurar" que encontraremos uno de ellos (no necesariamente el Ã³ptimo).    [ editar ]  Funcionamiento de un algoritmo genÃ©tico bÃ¡sico   Se genera aleatoriamente la poblaciÃ³n inicial, que estÃ¡ constituida por un conjunto de cromosomas, que representan las posibles soluciones del problema. En caso de no hacerlo aleatoriamente, es importante garantizar que dentro de la poblaciÃ³n inicial, se tenga la diversidad estructural de estas soluciones para tener una representaciÃ³n de la mayor parte de la poblaciÃ³n posible o al menos evitar la convergencia prematura.  A cada uno de los cromosomas de esta poblaciÃ³n se aplicarÃ¡ la funciÃ³n de aptitud para saber quÃ© tan "buena" es la soluciÃ³n que se estÃ¡ codificando.  DespuÃ©s de saber la aptitud de cada cromosoma se procede a elegir los cromosomas que serÃ¡n cruzados en la siguiente generaciÃ³n.  Los cromosomas con mejor aptitud tienen mayor probabilidad de ser seleccionados.  El cruzamiento es el principal operador genÃ©tico, representa la reproducciÃ³n sexual, opera sobre dos cromosomas a la vez para generar dos descendientes donde se combinan las caracterÃ­sticas de ambos cromosomas padres.  El AG se deberÃ¡ detener cuando se alcance la soluciÃ³n Ã³ptima, pero Ã©sta generalmente se desconoce, por lo que se deben utilizar otros criterios de detenciÃ³n. Normalmente se usan dos criterios: correr el AG un nÃºmero mÃ¡ximo de iteraciones (generaciones) o detenerlo cuando no haya cambios en la poblaciÃ³n.  El problema de selecciÃ³n de variables se puede ver como un problema de optimizaciÃ³n, ya que si se quiere encontrar, bajo alguna heurÃ­stica , el subconjunto de variables que potencialicen la diferenciaciÃ³n y las semejanzas de objetos de clases diferentes y de la misma clase respectivamente.    [ editar ]  Esquema general del algoritmo   Inicializar aleatoriamente una poblaciÃ³n de soluciones a un problema, representadas por una estructura de datos adecuada.  Evaluar cada una de las soluciones, y asignarle una puntuaciÃ³n o fitness segÃºn lo bien que lo hayan hecho.  Escoger de la poblaciÃ³n la parte que tenga una puntuaciÃ³n mayor  Mutar (cambiar) y entrecruzar (combinar) las diferentes soluciones de esa parte escogida, para reconstruir la poblaciÃ³n.  Repetir un nÃºmero determinado de veces, o hasta que se haya encontrado la soluciÃ³n deseada.    [ editar ]  VÃ©ase tambiÃ©n   Redes neuronales  Red bayesiana  MÃ­nimo/mÃ¡ximo local  Inteligencia Artificial  RobÃ³tica Evolutiva    [ editar ]  Enlaces externos   (en inglÃ©s) A Practical Genetic Algorithm Tutorial Programming step by step a Genetic Algorithm.    Tutorial de algoritmos genÃ©ticos  Algoritmos genÃ©ticos y computaciÃ³n evolutiva  Robot con Sistema de NavegaciÃ³n a base de Algoritmos Geneticos  Proyecto Darwin Simulador de evoluciÃ³n genÃ©tica. El simulador, presenta 3 especies (plantas, recolectores y predadores) que interactÃºan, se reproducen y evolucionan.  Algoritmos genÃ©ticos en Ruby     Obtenido de " http://es.wikipedia.org/wiki/Algoritmo_gen%C3%A9tico "  CategorÃ­as : Algoritmos | Inteligencia artificial         Vistas    ArtÃ­culo  DiscusiÃ³n  Editar  Historial      Herramientas personales    Registrarse/Entrar          NavegaciÃ³n    Portada  Portal de la comunidad  Actualidad  Cambios recientes  PÃ¡gina aleatoria  Ayuda  Donativos      Buscar           Herramientas    Lo que enlaza aquÃ­  Cambios en enlazadas  Subir archivo  PÃ¡ginas especiales  VersiÃ³n para imprimir  Enlace permanente Citar este artÃ­culo      Otros idiomas    Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©  CatalÃ  ÄŒesky  Dansk  Deutsch  Î•Î»Î»Î·Î½Î¹ÎºÎ¬  English  ÙØ§Ø±Ø³ÛŒ  Suomi  FranÃ§ais  Galego  ×¢×‘×¨×™×ª  Magyar  Bahasa Indonesia  Italiano  æ—¥æœ¬èªž  LietuviÅ³  Nederlands  Polski  PortuguÃªs  RomÃ¢nÄƒ  Ð ÑƒÑÑÐºÐ¸Ð¹  Svenska  à¹„à¸—à¸¢  TÃ¼rkÃ§e  Tiáº¿ng Viá»‡t  VolapÃ¼k  ä¸­æ–‡           Esta pÃ¡gina fue modificada por Ãºltima vez el 13:26, 18 feb 2008.  Contenido disponible bajo los tÃ©rminos de la Licencia de documentaciÃ³n libre de GNU (vÃ©ase Derechos de autor ). WikipediaÂ® es una marca registrada de la organizaciÃ³n sin Ã¡nimo de lucro Wikimedia Foundation, Inc.  PolÃ­tica de privacidad  Acerca de Wikipedia  LimitaciÃ³n de responsabilidad     