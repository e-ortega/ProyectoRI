                                                 Aceptar Las cookies nos permiten ofrecer nuestros servicios. Al utilizar nuestros servicios, aceptas el uso que hacemos de las cookies. Más Información .         Toggle navigation       Toggle navigation        Cursos   Backend  Frontend  Sistemas  Big Data  Robótica y Hardware  Desarrollo de aplicaciones moviles  Cloud Computing  Metodologías y Herramientas  Videojuegos  DevOps  Ciberseguridad y Ethical Hacking  Drupal  WordPress  Gestión de proyectos  Blockchain  Bases de datos   Ver todos    Carreras  Empresas  Contactar  Iniciar sesión   Comenzar ahora           Los 5 frameworks de JavaScript para Frontend más usados en 2018  Frontend  Javascript              Blog     Miguh Ruiz   15 Junio 2018      2          Hay cientos de frameworks de JavaScript, y cada día aparecen nuevos, en esta ocasión vamos a ver los frameworks más usados el área de Frontend . Si el frontend no es lo tuyo, tenemos otro artículo donde repasamos los cinco frameworks para Backend relacionados con JavaScript más usados .  Esta clasificación está basada en The State of JavaScript , una encuesta anual sobre Javascript realizada a desarrolladores de todo el mundo. Puedes ver aquí los resultados que vamos a trabajar .   React  Seguro que ya lo esperabas antes de abrir el artículo, React es el gran favorito de los desarrolladores . Por si aún no lo conoces, es una librería de Facebook enfocada en la creación de vistas con particularidades como los patrones de eventos que permiten actualizar las mencionadas vistas cuando los datos hayan sido modificados, aportando una carga en tiempo real a nuestro desarrollo.  A pesar de no ser considerado un framework en los últimos años ha acogido una gran popularidad, como podemos apreciar. Quizás también su versatilidad ha ayudado pues, al ser una librería de vistas podría ser perfectamente integrada con otro framework , como Angular.  Desde OpenWebinars te hemos machacado con React para que no le pierdas la pista, aquí te dejo alguno de los recursos relacionados:   ReactJS: Introducción y Primeros Pasos  Curso de ReactJS  Creando un CRUD con JavaScript: Construyendo el Frontend usando React   Sin framework  Aunque parezca algo increíble, y en nuestro caso una gran contraposición, ya que el artículo trata sobre una lista de frameworks, la realidad es que 9,5k de desarrolladores prefieren no usar ningún framework y trabajar con código Vanilla , que es como se le conoce a escribir JavaScript puro.  Vanilla JS, o Javascript puro trae consigo numerosas ventajas como el tiempo de carga que te ahorras al no tener un framework que cargar o el poder estar en contacto con las APIs de Javascript de primera mano.  En menor proporción estarán incluidos en este apartado los equipos que hayan desarrollado su propio framework , aunque sin duda este espacio queda reservado para necesidades muy específicas.  Angular 1.X  Aunque sin duda no es la última versión , el cambio que hubo tan grande en la API de Angular 2 ha hecho que algunos desarrolladores no se hayan puesto al día de las últimas versiones de Angular, o simplemente que no hayan actualizado su código, por el esfuerzo titánico necesario.  Este framework, y el resto de sus versiones fue creado inicialmente y es promovido por Google , entre sus características encontramos que modifica el DOM directamente y alguna que otra característica revolucionaria para su época que hoy en día nos sorprenden poco, habiendo visto el panorama que hay de frameworks y librerías.  Los sitios más destacados que están usado en este momento esta versión de Angular son aplicaciones de Google y algún que otro desarrollo que haya incorporado previamente esta tecnología.  En lo relativo a aprendizaje, te recomiendo aprender la versión más reciente de Angular , independientemente de la fecha en la que leas esto, ya que aunque esta versión se use, veremos como se va hacer el cambio a nuevas versiones, que según aseguró Google, serán retrocompatibles entre sí.  VueJS  El otro gran favorito de los frameworks de Frontend, VueJS .  Vue fue creado por un ex-empleado de Google, que había estado relacionado con AngularJS y que pretendía coger sus partes favoritas de este framework y crear algo muy ligero . Desde 2014 está disponible a toda la comunidad y, como no podría ser de otra manera es un proyecto Open Source.  Su curva de aprendizaje es bastante reducida , y más lo es aún si ya has trabajado con algún otro framework como los que estamos mencionando aquí. Por destacar en cuanto a sintaxis unifica en un solo archivo .vue todo el HTML, CSS y Javascript.  Su desarrollo permite que sea una buena opción tanto para desarrollos sencillos en los que por ejemplo usaríamos VanillaJS hasta SPA.  Con respecto a sus similitudes más latentes encontramos que el método del ciclo de vida de ReactJS y las directivas de Angular son bases de este framework.  Angular 2  Angular 2 fue una nueva versión de Angular bastante convulsa en su lanzamiento pues, introducía una gran diferencia con respecto a su versión anterior, lo que causó que los desarrolladores se enfurecieran al encontrarse una nueva API e incluso que todo el nuevo código está escrito en TypeScript , que no todo el mundo es experto en este compilador.  De igual manera, todas las novedades que introducía y el lavado de cara que llevaba a Angular a poder ser comparado con alternativas del momento como React hizo que los desarrolladores optaran por migrar a esta tecnología. No debemos de olvidar también que Google trabaja porque las siguientes versiones de Angular sea retrocompatibles y que este incidente no vuelva a suceder.  Aunque según lo que respondieron los encuestados, Angular 1 está más presente en los desarrollos, estoy completamente seguro que, para desarrollos completamente nuevos, si se elige Angular como tecnología, se está trabajando con esta versión o incluso con algunas versiones algo mejoradas, como es el caso de Angular 6 .  Angular 6 se sitúa a fecha de escribir este artículo como la última versión del framework y trae consigo una serie de actualizaciones enfocadas principalmente en las herramientas asociadas al framework, como el CLI, para dejar completamente a Angular listo para ser competitivo en el futuro y, sin duda lo ha estado siendo.  Conclusiones  Los frameworks de Frontend eran más previsibles que los que vimos con NodeJS, aunque, personalmente me ha sorprendido la cantidad de desarrolladores que optan por no usar ninguno de estos así como la cantidad de desarrolladores que al haber iniciado un proyecto hará algún tiempo siguen estancados en Angular 1.  Desde OpenWebinars trabajamos para ofrecerte siempre los mejores contenidos los más actualizados posibles. En estos momentos acabamos de sacar un curso de Angular 6 y te recomiendo todos los cursos de la carrera de Frontend Developer Profesional para que no estés desconectado de este mundo.  ¿Qué framework te ha sorprendido que no esté entre los más usados? Cuentanos en los comentarios que frameworks para frontend has probado o usas y dinos que tal te ha ido con él.     2 Comentarios - Únete a la conversación    Inicia sesión para comentar                            Formación   Precios  Cursos  Carreras  Empresas     Nosotros   Blog de tecnología  Blog sobre gestión de talento  Profesores     Ayuda   Contactar                 Mapa del Sitio  Aviso legal y condiciones  Política de privacidad  Cookies    Calle Virgen del Valle, 2A. 41011 Sevilla. +34 954 002 382 Copyright © 2018 Hipopoto S.L. Todos los derechos reservados                           